#ifndef __MAC_2_OUI_C__
#define __MAC_2_OUI_C__

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#include "mac2oui.h"
#include "jwHash.h"

#define MAC_2_OUI_TBL_SIZE 16384
#define MAC_2_OUI_LINE_SIZE_MAX 1024
#define MAC_2_OUI_TBL_FILE_DEFAULT "/etc/wifidog/mac.oui"

static jwHashTable* s_mac2oui_tbl = NULL;

/*
* strip header's BLANK and tail's \r \n BLANK
*/
static char*
line_strip(
char* line
){
    char* p1 = NULL;
	char* p2 = NULL;

    if(NULL == line) return NULL;
	
	/*trim header's BLANK*/
	for (p1 = line; isblank(*p1); p1++) ;

	/* End at end of line */
    if ((p2 = strchr(p1, '\r')) != NULL) {
		*p2 = '\0';
	} else if ((p2 = strchr(p1, '\n')) != NULL) {
	    *p2 = '\0';
	}

    /* trim all blanks at the end of the line */
	if(NULL != p2) {
        for (p2 = p2 - 1; isblank(*p2) && p2 > p1; p2--) {
		*p2 = '\0';
        }
	}
	return p1;
}

static void
mac2oui_tbl_init()
{
    if(NULL == s_mac2oui_tbl) {
		s_mac2oui_tbl = create_hash(MAC_2_OUI_TBL_SIZE);
    }
}

int
mac2oui_tbl_load(
    char* cfgFile
){
    FILE *fd = NULL;
	char* filename = cfgFile;
	char line[MAC_2_OUI_LINE_SIZE_MAX];
	char* tmp_ptr = NULL;
	char* mac_key = NULL;
	char* oui_val = NULL;

    mac2oui_tbl_init();
	
	if(NULL == filename) {
		filename = MAC_2_OUI_TBL_FILE_DEFAULT;
	}
	
	if (NULL == (fd = fopen(filename, "r"))) {
		printf("mac2oui can't find config file(%s)\n",filename);
		return -1;
	}

	while (!feof(fd) && fgets(line, MAC_2_OUI_LINE_SIZE_MAX, fd)) {
		tmp_ptr = line_strip(line);
		oui_val = NULL;
		mac_key = strtok_r(tmp_ptr," ",&oui_val);
		if((NULL != mac_key) && (NULL != oui_val)) {
			/*printf("%s:%s:%d\n",mac_key,oui_val,(int)strlen(oui_val));*/
			add_str_by_str(s_mac2oui_tbl,mac_key,oui_val);
		} else {
		    break;
		}
	}
    
    return 1;
}

int
mac2oui_tbl_search(
	char* mac_ind,
	char* oui_buf,
	int   oui_buf_len
){
    char* oui_val = NULL;
	int oui_val_len = 0;
	int i;
	char mac_key[8];

	if((NULL == mac_ind) || (NULL == oui_buf)) {
		return -1;
	}

    /*convert mac_ind to UPPER*/
	memcpy(mac_key,mac_ind,6);
	mac_key[7] = '\0';
	for(i = 0; i < 6; i++) {
		mac_key[i] = toupper(mac_key[i]);
	}
	
    get_str_by_str(s_mac2oui_tbl,mac_key,&oui_val);
	if((NULL != oui_val) && (oui_buf_len > (oui_val_len = strlen(oui_val)))) {
		memcpy(oui_buf,oui_val,oui_val_len);
		oui_buf[oui_val_len] = '\0';
		return 1;
	}
	
    return -1;
}


#endif
